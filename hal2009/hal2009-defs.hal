#
# This file is part of FreeHAL 2012.
#
# Copyright(c) 2006, 2007, 2008, 2009, 2010, 2011, 2012 Tobias Schulz and contributors.
# http://www.freehal.org
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 3
# of the License, or any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#

# ~~~~~~ INTRODUCTION ~~~~~~
# This is the FreeHAL 2012 source file for general definitions.
# ~~~~~~ IMPLEMENTATION ~~~~~~
# ~~~~~ HEADER ~~~~~
#
# A part of speech is represented as a string.
# sym_* is always a hash containing these representations as keys.
set hash sym_noun to { "2" => 1, "n" => 1, "n," => 1, "f,m" => 1, "f,n" => 1, "f,n,m" => 1, "f,m,n" => 1, "m,f" => 1, "m,n" => 1, "m,f,n" => 1, "m,n,f" => 1, "m" => 1, "f" => 1, "n,pl" => 1, "ppron" => 1, }
set hash sym_prep to { "6" => 1, "prep" => 1, }
set hash sym_questionword to { "5" => 1, "fw" => 1, "questionword" => 1, }
set hash sym_verb to { "1" => 1, "verb" => 1, "vt" => 1, "vi" => 1, "v" => 1 }
set hash sym_inter to { "7" => 1, "inter", }
set hash sym_adj to { "3" => 1, "adj" => 1, "adv" => 1, }
set hash sym_pp to { "pron" => 1, }
set hash sym_unimportant to { "nothing" => 1, }
set hash sym_linking to { "linking" => 1, }
set hash sym_art to { "art" => 1, }
set hash sym_entity to { elements of hash sym_adj, elements of hash sym_art, elements of hash sym_noun }
set hash sym_keyword to { "ISUNKNOWN" => 1, "ENUMALL" => 1, }

set hash val_omit to { "a" => 1, "b" => 1, "c" => 1, "d" => 1, "e" => 1, "f" => 1, "g" => 1, "h" => 1, }

# The constant variables TYPE and GENUS are defined as 0 and 1. They are used as array indices.
set const TYPE to 0
set const GENUS to 1

# If a message is printed, "ident" contains the amount of spaces at the left
set var ident to ""

# Cache, only used when high memory support used
set array cache_memory to [ ]

# An example: If the german word Baecker is not found, maybe Baeckerin is there
 #, "es", "er", "en", "em"
set array standard_suffixes to [ "", "in", "e", "s" ]
set var be_slow__last_time to time without arguments
